/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include        "include/Dimensions" 

//#codeStream;

convertToMeters 1;

vertices
(
    (0		0	$Z1) //0
    ($Xmid	0	$Z1) //1
    ($Xmax	0	$Z1) //2
    ($Xmax	$Ymid	$Z1) //3
    ($Xmax	$Ymax	$Z1) //4
    ($L		$Ymax	$Z1) //5
    ($L		$Ymid	$Z1) //6
    ($Xmin	$Ymid	$Z1) //7   
    ($Xmin	$Ymid1	$Z1) //8
    ($Xmin	0	$Z1) //9
    ($L		0	$Z1) //10
    ($L		$Ymid1	$Z1) //11
    (0		$Ymid1	$Z1) //12
    (0		$Ymid	$Z1) //13
    ($Xmid	$Ymid	$Z1) //14
    ($Xmid	$Ymid1	$Z1) //15

    (0		0	$Z) //16 0
    ($Xmid	0	$Z) //17 1
    ($Xmax	0	$Z) //18 2
    ($Xmax	$Ymid	$Z) //19 3
    ($Xmax	$Ymax	$Z) //20 4
    ($L		$Ymax	$Z) //21 5  
    ($L		$Ymid	$Z) //22 6
    ($Xmin	$Ymid	$Z) //23 7  
    ($Xmin	$Ymid1	$Z) //24 8
    ($Xmin	0	$Z) //25 9
    ($L		0	$Z) //26 10
    ($L		$Ymid1	$Z) //27 11
    (0		$Ymid1	$Z) //28 12
    (0		$Ymid	$Z) //29 13
    ($Xmid	$Ymid	$Z) //30 14
    ($Xmid	$Ymid1	$Z) //31 15   

);

blocks
(
    hex (0 1 15 12 16 17 31 28) 	 train (20 10 1) edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)
    hex (1 2 3 14 17 18 19 30) 		 train (380 15 1) edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)
    hex (12 15 14 13 28 31 30 29) 	 train (20 5 1) edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)
    hex (11 12 13 6 27 28 29 22) 	 train (600 5 1) edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)
    hex (9 10 11 8 25 26 27 24) 	 train (200 10 1) edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)
    hex (8 11 6 7 24 27 22 23) 		 train (200 5 1) edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)
    hex (6 3 4 5 22 19 20 21) 		 sides (1000 25 1) edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)


);

edges
(
);

boundary
(

    AMI1 //train
    {
	type patch;
        faces
        (
            (7 23 22 6)
            (6 22 29 13)
            (13 29 30 14)
            (14 30 19 3)		
        );
    }
    AMI2 //sides
    {
	type patch;
        faces
        (
            (6 3 19 22)

        );
    }
    inlet
    {
        type patch;
        faces
        (
            (2 3 19 18)
            (3 4 20 19)

        );
    }
    outlet
    {
        type patch;
        faces
        (
            (8 9 25 24)
            (7 8 24 23)
            (5 6 22 21)

        );
    }
    train
    {
        type wall;
        faces
        (
            (0 12 28 16)
            (12 11 27 28)
            (11 10 26 27)
        );
    }
    outside
    {
        type patch;
        faces
        (
            (5 21 20 4)
        );
    }
    symmetry
    {
        type symmetryPlane;
        faces
        (
	    (9 10 26 25)
            (0 1 17 16)
            (1 2 17 18)
        );
    }
    front
    {
        type empty;
        faces
        (
            (16 17 31 28)
            (17 18 19 30)
            (28 31 30 29)
            (25 26 27 24)
            (24 27 22 23)
            (27 28 29 22)
            (22 19 20 21)
        );
    }
    back
    {
        type empty;
        faces
        (
	    (9 8 11 10)
            (8 7 6 11)
            (11 6 13 12)
            (12 13 14 15)
            (0 12 15 1)
            (1 14 3 2)
            (6 5 4 3)
        );
    }
    A
    {
        type patch;
        faces
        (
            (1 15 31 17)
            (15 14 30 31)
        );
    }

    A1
    {
        type patch;
        faces
        (
            (14 1 17 30)
        );
    }


);


mergePatchPairs
(
(A A1)
);

// ************************************************************************* //
